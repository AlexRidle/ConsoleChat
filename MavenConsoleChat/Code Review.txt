Code Review [RUS]

1) Классы не разбиты по пакетам.
2) В классах неправильно лежат методы. Необходимо либо переместить их из одного в другой, либо создать отдельный класс для некоторых методов.
3) Неправильное наименование классов и переменных.
4) Множественный дубликат кода, который необходимо вынести в отдельный метод или вовсе удалить за ненадобностью.
5) Большие методы, в которых возникат сложность чтения кода. Необходимо разбить большие методы на несколько отдельных методов.
6) Такие переменные как порт и хост должны находиться либо в отдельном файле с настройками либо в классе с константами.
7) Необходимо импортировать только те классы, которые используются в коде. Не нужно импортировать сразу весь пакет (например java.util.* если используется только Set и Arrays)
8) Многочисленные очевидные дублирующие коментарии, которые только затрудняют чтение кода (Например missedMessages.remove(customer); // Удаляем из списка пропущенных сообщений)
9) Пустые строки в методе, повторяющиеся каждую вторую строчку, которые затрудняют чтение кода.
10) Неформатированный код (длинные строки или отсутствие пробелов). В IntelliJ комбинация ctrl + alt + l зачастую решает эту проблему автоматически
11) Создание новых объектов без нужды в них.
12) Отсутствие проверок на правильность введенных данных в некоторых местах.
13) Если в проекте использовать JSON при передаче информации, а также создать классы сущностей, в которых можно было бы хранить информацию клиента, такую как его сокет, оставленные сообщения, роль, булеан доступности и другие необходимые переменные, то можно было бы избежать огромного количества кода и повысить его читабельность.
14) Присутствие бессмысленных условий, которые всегда выполняются одинаково, так как переменная никогда не принимает то или иное значение при проверке.
15) Использование строки вместо булеана для хранения значения доступности пользователя.
